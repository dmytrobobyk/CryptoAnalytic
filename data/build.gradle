plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-android'
}

android {
    namespace 'com.cryptoanalytic.data'
    compileSdk 32

    defaultConfig {
        minSdk 24
        targetSdk 32

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        //Coin gecko api
        buildConfigField "String", "COIN_GECKO_API_BASE_URL", '"https://api.coingecko.com/api/v3/"'
        //Cryptocurrency RSS Feeds
        buildConfigField "String", "NEWS_RSS_FEED", '"https://cointelegraph.com/rss/"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

apply from: "../versions.gradle"

dependencies {
    implementation(project(":database"))
    implementation(project(":domain"))

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"

    //Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.retrofit2:converter-simplexml:$retrofit"

    //Hilt DI
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"

    //Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    testImplementation "junit:junit:$jUnit"
    androidTestImplementation "androidx.test.ext:junit:$jUnitExt"
}