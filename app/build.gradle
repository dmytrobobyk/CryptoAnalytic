plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-android'
    id 'kotlin-kapt'
//    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.cryptoanalytic"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Coin market cap api
        buildConfigField "String", "API_BASE_URL", '"https://pro-api.coinmarketcap.com/v1/"'
        buildConfigField "String", "API_KEY", '"574ea375-7e0f-46d5-a352-379d2b1383b3"'
        buildConfigField "String", "API_AUTH_HEADER", '"X-CMC_PRO_API_KEY"'

        //Coin gecko api
        buildConfigField "String", "COIN_GECKO_API_BASE_URL", '"https://api.coingecko.com/api/v3/"'
        //Cryptocurrency RSS Feeds
        buildConfigField "String", "NEWS_RSS_FEED", '"https://cointelegraph.com/rss/"'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding = true
    }
    lintOptions {
        abortOnError false
    }
}

apply from: "../versions.gradle"


dependencies {
    implementation(project(":database"))

    //AndroidX
    implementation "androidx.core:core-ktx:$androidX"
    implementation "androidx.appcompat:appcompat:$appCompat"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtx"
    implementation "androidx.core:core-splashscreen:$splashScreen"

    //Material
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayout"

    //OkHttp
    implementation "com.squareup.okhttp3:okhttp:$okHttp"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttp"

    //Retrofit
    api "com.squareup.retrofit2:retrofit:$retrofit"
    api "com.squareup.retrofit2:converter-gson:$retrofit"
    api "com.squareup.retrofit2:converter-simplexml:$retrofit"

    //Hilt DI
    implementation "com.google.dagger:hilt-android:$hilt"
    kapt "com.google.dagger:hilt-android-compiler:$hilt"

    //Room
    implementation "androidx.room:room-runtime:$room"
    kapt "androidx.room:room-compiler:$room"
    implementation "androidx.room:room-ktx:$room"

    //Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation"
    implementation "androidx.navigation:navigation-runtime-ktx:$navigation"

    //Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifeCycleExtensions"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleViewModel"

    //Charts
    implementation "com.github.PhilJay:MPAndroidChart:$MPAndroidCharts"
    implementation "com.nex3z:toggle-button-group:$toggleButtonGroup"

    //Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide"


    //Testing
    testImplementation "junit:junit:$jUnit"
    androidTestImplementation "androidx.test.ext:junit:$jUnitExt"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso"
}